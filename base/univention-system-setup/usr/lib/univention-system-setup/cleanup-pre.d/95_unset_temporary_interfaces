#!/usr/bin/python3
#
# Univention System Setup
# cleanup script to shut down the local browser in the appliance scenario
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2014-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

import re
import subprocess

import univention.config_registry


RE_IPV4_TYPE = re.compile('^interfaces/[^/]*/type$')


def unset_temporary_interfaces():
    ucr = univention.config_registry.ConfigRegistry()
    ucr.load()

    # unset the temporary interface if set
    for var in ucr.keys():
        if RE_IPV4_TYPE.match(var) and ucr.get(var) == 'appliance-mode-temporary':
            print('unset %s' % var)
            keys = [var]
            for k in ['netmask', 'address', 'broadcast', 'network']:
                keys.append(var.replace('/type', '/%s' % k))
            univention.config_registry.handler_unset(keys)
            # Shut down temporary interface
            subprocess.call(['ifdown', var.split('/')[1].replace('_', ':')])


if __name__ == "__main__":
    unset_temporary_interfaces()
