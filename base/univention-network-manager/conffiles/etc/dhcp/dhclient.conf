@%@UCRWARNING=#@%@

# Configuration file for /sbin/dhclient.
#
# This is a sample configuration file for dhclient. See dhclient.conf's
#	man page for more information about the syntax of this file
#	and a more comprehensive list of the parameters understood by
#	dhclient.
#
# Normally, if the DHCP server provides reasonable information and does
#	not leave anything out (like the domain name, for example), then
#	few changes must be made to this file, if any.
#

option rfc3442-classless-static-routes code 121 = array of unsigned integer 8;

@!@
if configRegistry.is_true('dhclient/options/ddns', False):
    print('send host-name "%s";' % configRegistry.get('hostname', ''))
    if configRegistry.get('dhclient/options/ddns/zone', None):
        print('send fqdn.fqdn "%s.%s";' % (configRegistry.get('hostname', ''), configRegistry.get('dhclient/options/ddns/zone', None)))
    else:
        print('send fqdn.fqdn "%(hostname)s.%(domainname)s";' % configRegistry)
    if configRegistry.is_true('dhclient/options/ddns/serverupdate', True):
        print('send fqdn.server-update on;')
    else:
        print('send fqdn.server-update off;')
    print('send fqdn.encoded on;')
@!@
request subnet-mask, broadcast-address, time-offset, routers,
	domain-name, domain-name-servers, domain-search, host-name,
	dhcp6.name-servers, dhcp6.domain-search, dhcp6.fqdn, dhcp6.sntp-servers,
	netbios-name-servers, netbios-scope, interface-mtu,
	rfc3442-classless-static-routes, ntp-servers;

#send dhcp-client-identifier 1:0:a0:24:ab:fb:9c;
#send dhcp-lease-time 3600;
#supersede domain-name "fugue.com home.vix.com";
#prepend domain-name-servers 127.0.0.1;
#require subnet-mask, domain-name-servers;
@!@
print('timeout %s;' % configRegistry.get('dhclient/options/timeout', '30'))
print('retry %s;' % configRegistry.get('dhclient/options/retry', '60'))
@!@
# reboot + timeout should be below the 45 secs that NetworkManager waits before terminating dhclient, otherwise fallback script is not run
reboot 5;
#select-timeout 5;
#initial-interval 2;
#script "/sbin/dhclient-script";
#media "-link0 -link1 -link2", "link0 link1";
#reject 192.33.137.209;

#alias {
#  interface "eth0";
#  fixed-address 192.5.5.213;
#  option subnet-mask 255.255.255.255;
#}

#lease {
#  interface "eth0";
#  fixed-address 192.33.137.200;
#  medium "link0 link1";
#  option host-name "andare.swiftmedia.com";
#  option subnet-mask 255.255.255.0;
#  option broadcast-address 192.33.137.255;
#  option routers 192.33.137.250;
#  option domain-name-servers 127.0.0.1;
#  renew 2 2000/1/12 00:00:01;
#  rebind 2 2000/1/12 00:00:01;
#  expire 2 2000/1/12 00:00:01;
#}
@!@
import random
import re
import os.path
from datetime import datetime, timedelta
RE_IFACE = re.compile(r'^interfaces/([^/]+)/type$')

if configRegistry.is_true('dhclient/linklocal/fallback', True):
    cand = (RE_IFACE.match(k) for k, v in configRegistry.items() if v == 'dhcp')
    matched = (match.group(1) for match in cand if match)
    for iface in matched:
        r1 = random.randrange(1, 255)  # 1 to 254
        r2 = random.randrange(0, 255)  # 1 to 254

        # Use the current address, if it is already a 169.254 address
        current_addr = configRegistry.get('interfaces/%s/address' % iface, '169.254.%s.%s' % (r1, r2))
        if not current_addr.startswith('169.254.'):
            current_addr = '169.254.%s.%s' % (r1, r2)

        d = datetime.now() + timedelta(hours=6)  # expire in six hours

        print('lease {')
        print('  interface "%s";' % (iface,))
        print('  fixed-address %s;' % (current_addr,))
        print('  option subnet-mask 255.255.0.0;')
        print('  option broadcast-address 169.254.255.255;')
        # Format form 'man dhclient.conf: <weekday> <year>/<month>/<day> <hour>:<minute>:<second>
        print(d.strftime('  expire %w %Y/%m/%d %H:%M:%S;'))
        print('}')

LOCAL = '/etc/dhcp/dhclient.conf.local'
if os.path.exists(LOCAL):
    print('include "%s";' % LOCAL)
@!@
