#!/bin/sh
set -e -u

[ -s "$1" ]
dir="$(dirname "$1")"
base="$(basename "$1" .changes)"
pkg="${base%%_*}"

aptly () {
    local msg="$1" url
    shift
    for url in "$@"
    do
        case "$url" in
        *://*) break
        esac
    done
    printf '\n=== %s === %s ===\n' "$msg" "$url" >&2
    "${0%/*}/ht" \
        --ignore-stdin \
        --pretty=all \
        --timeout=60s \
        "$@"
}

upload () {
    RE='^ [0-9a-f]{32} [0-9]+ ((([a-zA-Z0-9_.-]+/)?[a-zA-Z0-9_.-]+|-) ([a-zA-Z]+|-) )?(.*)$'
    args="$(sed -rne "s!${RE}!file@${dir}/\\5!p" "$1")"
    # shellcheck disable=SC2086
    aptly upload \
        --form \
        POST "${APTLY}/files/${CI_JOB_ID}" \
        $args
}

list () {
    pkgs="$(
    aptly list \
        --pretty=none \
        GET "${APTLY}/repos/${CI_COMMIT_REF_SLUG}/packages" \
        "q==\$Source ($pkg)"
    )"
    echo "$pkgs"
}

delete () {
    aptly delete \
        DELETE "${APTLY}/repos/${CI_COMMIT_REF_SLUG}/packages" \
        "PackageRefs:=$pkgs"
}

replace () {
    aptly replace \
        POST "${APTLY}/repos/${CI_COMMIT_REF_SLUG}/file/${CI_JOB_ID}" \
        'forceReplace:=1'
}

publish () {
    aptly publish \
        PUT "${APTLY}/publish/${CI_COMMIT_REF_SLUG}/git" \
        'AcquireByHash:=true' \
        'ForceOverwrite:=true'
}

upload "$1"
list
delete
replace
publish
