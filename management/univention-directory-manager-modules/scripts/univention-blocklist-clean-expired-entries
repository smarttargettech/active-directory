#!/usr/bin/python3
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2024-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

"""This tool lists expired blocklist entries."""

from argparse import ArgumentParser
from datetime import datetime

from univention.admin.blocklist import BLOCKLIST_BASE
from univention.udm import UDM


def is_expired(blockedUntil):
    expired_time = datetime.strptime(blockedUntil, "%Y%m%d%H%M%SZ")
    current_time = datetime.utcnow()
    return current_time > expired_time


if __name__ == '__main__':
    parser = ArgumentParser(description=__doc__)
    parser.add_argument(
        "--remove-expired",
        help="Remove expired entries from the blocklist.",
        action='store_true',
        default=False,
        required=False,
    )
    options = parser.parse_args()
    blocklist_mod = UDM.admin().version(3).get('blocklists/entry')
    now = datetime.now()
    print(f'{now} - searching for expired entries')
    for entry in blocklist_mod.search(base=BLOCKLIST_BASE):
        if is_expired(entry.props.blockedUntil):
            now = datetime.now()
            if options.remove_expired:
                print(f'{now} - deleting expired entry: {entry.dn}')
                entry.delete()
            else:
                print(f'expired entry: {entry.dn}')
