#@%@UCRWARNING=# @%@
@!@
import sys
import glob
mech_list = configRegistry.get('ldap/server/sasl/mech_list', 'EXTERNAL gssapi DIGEST-MD5 CRAM-MD5 LOGIN SAML OAUTHBEARER PLAIN').split()
items = sorted(configRegistry.items())

# SAML
sys.path.insert(0, '/usr/share/univention-management-console/saml/')
from sp import CONFIG  # noqa: E402

identity_provider = glob.glob('/usr/share/univention-management-console/saml/idp/*.xml')
service_providers = [CONFIG['entityid']]

servers = ['https://%s/univention/saml/metadata' % server for key, server in items if key.startswith('umc/saml/trusted/sp/')]
service_providers.extend([server for server in servers if server not in service_providers])

if identity_provider:
    print('saml_grace: %d' % (int(configRegistry.get('umc/saml/grace_time', 600)),))
    print('saml_userid: urn:oid:0.9.2342.19200300.100.1.1')
    for i, idp in enumerate(identity_provider):
        print('saml_idp%d: %s' % (i, idp))
    for i, sp in enumerate(service_providers):
        print('saml_trusted_sp%d: %s' % (i, sp))

# OAuth
issuers = [iss for key, iss in items if key.startswith('ldap/server/sasl/oauthbearer/trusted-issuer/') if iss]
jwks = [jwk for key, jwk in items if key.startswith('ldap/server/sasl/oauthbearer/trusted-jwks/') if jwk]
audiences = [server for key, server in items if key.startswith('ldap/server/sasl/oauthbearer/trusted-audience/') if server]
scopes = [scope for key, scope in items if key.startswith('ldap/server/sasl/oauthbearer/required-scopes/') if scope]
relying_parties = [server for key, server in items if key.startswith('ldap/server/sasl/oauthbearer/trusted-authorized-party/') if server]

print('oauthbearer_no_tls: %d' % (configRegistry.is_true('ldap/server/sasl/oauthbearer/no-tls', False),))
print('oauthbearer_grace: %d' % (configRegistry.get_int('ldap/server/sasl/oauthbearer/grace-time', 3),))
print('oauthbearer_userid: %s' % (configRegistry.get('ldap/server/sasl/oauthbearer/userid-claim', 'uid'),))
for i, jwk in enumerate(jwks):
    print('oauthbearer_trusted_jwks%d: %s' % (i, jwk))
for i, op in enumerate(issuers):
    print('oauthbearer_trusted_iss%d: %s' % (i, op))
for i, aud in enumerate(audiences):
    print('oauthbearer_trusted_aud%d: %s' % (i, aud))
for i, scope in enumerate(scopes):
    print('oauthbearer_required_scope%d: %s' % (i, scope))
for i, rp in enumerate(relying_parties):
    print('oauthbearer_trusted_azp%d: %s' % (i, rp))

if not all((issuers, jwks, audiences)):
    mech_list.remove('OAUTHBEARER')

if mech_list:
    print('mech_list: %s' % ' '.join(mech_list))
@!@
