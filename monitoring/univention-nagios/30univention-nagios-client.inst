#!/bin/sh
#
# Univention Nagios Client
#  join script
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2007-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

VERSION=5
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

eval "$(univention-config-registry shell)"

# One of the configuration variables, allowed_hosts, uses ldap/master as a default
# Since ldap/master is only set during the join process we force a commit on the nrpe.cfg

univention-config-registry commit /etc/nagios/nrpe.cfg

# only register host to ldap if nagios/client/autoregister is not "no"
if [ ! "$nagios_client_autoregister" = "no" ] ; then

	if ! udm container/cn list "$@" --filter cn=nagios | grep "^DN: cn=nagios,$ldap_base$" 2>/dev/null >/dev/null ; then
		echo "Cannot find container cn=nagios,$ldap_base (ldapsearch error $?)"
		echo "Please check if univention-nagios-server is installed on a system in UCS domain."
		exit 0
	fi

    # Enable Nagios for this host
    univention-directory-manager "computers/${server_role}" modify "$@" --dn "$ldap_hostdn" --append-option="nagios" || die

	# remove obsolete services from host
	oldServices="UNIVENTION_SMTP UNIVENTION_LDAP"
	for i in $oldServices; do
		dn="cn=$i,cn=nagios,$ldap_base"
		if udm nagios/service list "$@" --filter name="$i" | grep -q "^DN: cn=$i"; then
			univention-directory-manager nagios/service modify "$@" --dn "$dn" \
			--remove assignedHosts="${ldap_hostdn}" || die
		fi
	done

    # append host to default services
    for dn in "cn=UNIVENTION_PING,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_DISK_ROOT,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_SWAP,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_DNS,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_SMTP2,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_REPLICATION,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_LOAD,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_NTP,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_PACKAGE_STATUS,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_NSCD,cn=nagios,$ldap_base" \
              "cn=UNIVENTION_NSCD2,cn=nagios,$ldap_base" ; do
		rdn="$(echo $dn | sed -e 's|,.*||')"
		if udm nagios/service list "$@" --filter "$rdn" | grep "^DN: $dn" 2>/dev/null >/dev/null; then
			univention-directory-manager nagios/service modify "$@" --append assignedHosts="${ldap_hostdn}" --dn "$dn" || die
		else
			echo "Skipping $dn (code $?)"
		fi
	done

    # if i am a UNIVENTION_NSCD2 hosts, remove me from UNIVENTION_NSCD
    if udm nagios/service list "$@" --filter "cn=UNIVENTION_NSCD2" | grep -q "assignedHosts: ${ldap_hostdn}"; then
		if udm nagios/service list "$@" --filter "cn=UNIVENTION_NSCD" | grep -q "assignedHosts: ${ldap_hostdn}"; then
			udm nagios/service modify "$@" \
				--dn "cn=UNIVENTION_NSCD,cn=nagios,$ldap_base" \
				--remove assignedHosts="${ldap_hostdn}"
		fi
	fi

    # add ssl check only on role "domaincontroler_master/backup"
    if [ "$server_role" = "domaincontroller_master" -o \
         "$server_role" = "domaincontroller_backup" ] ; then
		for dn in "cn=UNIVENTION_SSL,cn=nagios,$ldap_base"; do
			rdn="$(echo $dn | sed -e 's|,.*||')"
			if udm nagios/service list "$@" --filter "$rdn" | grep "^DN: $dn" 2>/dev/null >/dev/null; then
				univention-directory-manager nagios/service modify "$@" --append assignedHosts="${ldap_hostdn}" --dn "$dn" || die
			else
				echo "Skipping $dn (code $?)"
			fi
		done
    fi

    # add ldap check only on role "domaincontroler_*"
    if [ "$server_role" = "domaincontroller_master" -o \
         "$server_role" = "domaincontroller_backup" -o \
         "$server_role" = "domaincontroller_slave" ] ; then
		for dn in "cn=UNIVENTION_LDAP_AUTH,cn=nagios,$ldap_base"; do
			rdn="$(echo $dn | sed -e 's|,.*||')"
			if udm nagios/service list "$@" --filter "$rdn" | grep "^DN: $dn" 2>/dev/null >/dev/null; then
				univention-directory-manager nagios/service modify "$@" --append assignedHosts="${ldap_hostdn}" --dn "$dn" || die
			else
				echo "Skipping $dn (code $?)"
			fi
		done
    fi

    # add joinstatus check only on role "domaincontroler_* and memberserver"
    if [ "$server_role" = "domaincontroller_master" -o \
         "$server_role" = "domaincontroller_backup" -o \
         "$server_role" = "domaincontroller_slave" -o \
         "$server_role" = "memberserver"  ] ; then
		dn="cn=UNIVENTION_JOINSTATUS,cn=nagios,$ldap_base"
		rdn="$(echo $dn | sed -e 's|,.*||')"
		if udm nagios/service list "$@" --filter "$rdn" | grep "^DN: $dn" 2>/dev/null >/dev/null; then
			univention-directory-manager nagios/service modify "$@" --append assignedHosts="${ldap_hostdn}" --dn "$dn" || die
		else
			echo "Skipping $dn (code $?)"
		fi
    fi

    # add slapd mdb maxsize check only on role "domaincontroler_*"
    if [ "$server_role" = "domaincontroller_master" -o \
         "$server_role" = "domaincontroller_backup" -o \
         "$server_role" = "domaincontroller_slave" ] ; then
		for dn in "cn=UNIVENTION_SLAPD_MDB_MAXSIZE,cn=nagios,$ldap_base"; do
			rdn="$(echo $dn | sed -e 's|,.*||')"
			if udm nagios/service list "$@" --filter "$rdn" | grep "^DN: $dn" 2>/dev/null >/dev/null; then
				univention-directory-manager nagios/service modify "$@" --append assignedHosts="${ldap_hostdn}" --dn "$dn" || die
			else
				echo "Skipping $dn (code $?)"
			fi
		done
    fi

    # add listener mdb maxsize check only on role "domaincontroler_*" and memberserver
    if [ "$server_role" = "domaincontroller_master" -o \
         "$server_role" = "domaincontroller_backup" -o \
         "$server_role" = "memberserver" -o \
         "$server_role" = "domaincontroller_slave" ] ; then
		for dn in "cn=UNIVENTION_LISTENER_MDB_MAXSIZE,cn=nagios,$ldap_base"; do
			rdn="$(echo "$dn" | sed -e 's|,.*||')"
			if udm nagios/service list "$@" --filter "$rdn" | grep "^DN: $dn" 2>/dev/null >/dev/null; then
				univention-directory-manager nagios/service modify "$@" --append assignedHosts="${ldap_hostdn}" --dn "$dn" || die
			else
				echo "Skipping $dn (code $?)"
			fi
		done
    fi
fi

joinscript_save_current_version

exit 0
