#!/bin/bash
#
# Univention Monitoring Client
#	join script
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2022-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

VERSION=2

. /usr/share/univention-join/joinscripthelper.lib
. /usr/share/univention-lib/all.sh
joinscript_init

eval "$(univention-config-registry shell)"

MONITORINGCONTAINER="cn=monitoring,$ldap_base"

for device in sda sdb sdc sdd; do
	dev=$(echo $device | tr '[:lower:]' '[:upper:]')

	univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
		--set name="UNIVENTION_SMART_${dev}_HEALTHY" \
		--set description="/dev/${device} is not healthy" \
		--set summary="check if /dev/${device} is healthy" \
		--append labels='"severity" "critical"' \
		--set query="smartmon_device_smart_healthy{disk="'"/dev/'"${device}"'",%instance%} != 1' || die "UNIVENTION_SMART_${dev}_HEALTHY"

	univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
		--set name="UNIVENTION_SMART_${dev}_HEALTHY_METRIC_MISSING" \
		--set description="metric regarding /dev/${device} is missing" \
		--set summary="check if metric regarding /dev/${device} is missing" \
		--append labels='"severity" "critical"' \
		--set query="absent(smartmon_device_smart_healthy{disk="'"/dev/'"${device}"'",%instance%}) == 1' || die "UNIVENTION_SMART_${dev}_HEALTHY_METRIC_MISSING"

	univention-directory-manager monitoring/alert create "$@" --ignore_exists --position="$MONITORINGCONTAINER" \
		--set name="UNIVENTION_SMART_${dev}_PENDINGSECTOR_WARNING" \
		--set description="/dev/${device} has sectors pending re-allocation" \
		--set summary="check if /dev/${device} has sectors pending re-allocation" \
		--append labels='"severity" "warning"' \
		--set query="absent(smartmon_current_pending_sector{disk="'"/dev/'"${device}"'",%instance%}) != 1' || die "UNIVENTION_SMART_${dev}_PENDINGSECTOR_WARNING"
done

if [ $JS_LAST_EXECUTED_VERSION -eq 1 ]; then
	for device in sda sdb sdc sdd; do
		dev=$(echo $device | tr '[:lower:]' '[:upper:]')

		univention-directory-manager monitoring/alert modify "$@" --dn "cn=UNIVENTION_SMART_${dev}_HEALTHY,$MONITORINGCONTAINER" \
			--set description="/dev/${device} is not healthy" \
			--set summary="check if /dev/${device} is healthy" \
			--set query="smartmon_device_smart_healthy{disk="'"/dev/'"${device}"'",%instance%} != 1'

		univention-directory-manager monitoring/alert modify "$@" --dn "cn=UNIVENTION_SMART_${dev}_HEALTHY_METRIC_MISSING,$MONITORINGCONTAINER" \
			--set description="metric regarding /dev/${device} is missing" \
			--set summary="check if metric regarding /dev/${device} is missing" \
			--set query="absent(smartmon_device_smart_healthy{disk="'"/dev/'"${device}"'",%instance%}) == 1'

		univention-directory-manager monitoring/alert modify "$@" --dn "cn=UNIVENTION_SMART_${dev}_PENDINGSECTOR_WARNING,$MONITORINGCONTAINER" \
			--set description="/dev/${device} has sectors pending re-allocation" \
			--set summary="check if /dev/${device} has sectors pending re-allocation" \
			--set query="absent(smartmon_current_pending_sector{disk="'"/dev/'"${device}"'",%instance%}) != 1'
	done
fi


CHECKS=(
	"UNIVENTION_SMART_SDA_HEALTHY"
	"UNIVENTION_SMART_SDB_HEALTHY"
	"UNIVENTION_SMART_SDC_HEALTHY"
	"UNIVENTION_SMART_SDD_HEALTHY"
	"UNIVENTION_SMART_SDA_PENDINGSECTOR_WARNING"
	"UNIVENTION_SMART_SDB_PENDINGSECTOR_WARNING"
	"UNIVENTION_SMART_SDC_PENDINGSECTOR_WARNING"
	"UNIVENTION_SMART_SDD_PENDINGSECTOR_WARNING"
	"UNIVENTION_SMART_SDA_HEALTHY_METRIC_MISSING"
	"UNIVENTION_SMART_SDB_HEALTHY_METRIC_MISSING"
	"UNIVENTION_SMART_SDC_HEALTHY_METRIC_MISSING"
	"UNIVENTION_SMART_SDD_HEALTHY_METRIC_MISSING"
)

if [ $JS_LAST_EXECUTED_VERSION -le 0 ] && is_ucr_true monitoring/client/nagios-automigration; then
	/usr/share/univention-monitoring-client/migrate-nagios-services-to-alerts "$@" || die "Could not migrate nagios service to alerts"
elif ! is_ucr_false monitoring/client/autoregister; then
	# univention-directory-manager "computers/${server_role}" modify "$@" --dn "$ldap_hostdn" --append-option="monitoring" || die
	for name in "${CHECKS[@]}"; do
		univention-directory-manager monitoring/alert modify "$@" \
			--dn "cn=$name,$MONITORINGCONTAINER" \
			--append assignedHosts="${ldap_hostdn}" || die
	done
fi
joinscript_save_current_version

exit 0
