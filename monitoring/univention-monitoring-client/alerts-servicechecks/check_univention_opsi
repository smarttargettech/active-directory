#!/usr/bin/python3
#
# Univention Monitoring Plugin
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2010-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

import re

from univention.monitoring import Alert


class OPSI(Alert):

    def write_metrics(self):
        rc, output = self.exec_command(['/usr/lib/nagios/plugins/check_procs', '-w', '1:', '-c', '1:', '-C', 'opsiconfd'])
        self.write_metric('univention_opsi_running', 1 if rc == 0 else 0)
        self.log.debug(output)

        # check HTTP service
        port = '4447'
        try:
            with open('/etc/opsi/opsiconfd.conf') as fd:
                while True:
                    line = fd.readline()
                    if not line:
                        break
                    match = re.match(r'^\s*https port\s+=\s+(\d+)', line)
                    if match:
                        port = match.group(0)
                        break
        except FileNotFoundError:
            pass

        rc, output = self.exec_command(['/usr/lib/nagios/plugins/check_http', '-I', '127.0.0.1', '-p', port, '-S'])
        self.write_metric('univention_opsi_reachable', 1 if rc == 0 else 0)
        self.log.debug(output)


if __name__ == '__main__':
    OPSI.main()
