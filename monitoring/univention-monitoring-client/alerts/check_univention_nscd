#!/usr/bin/python3
#
# Univention Monitoring Plugin
#  check_univention_nscd: check if nscd is bound to its socket.
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2017-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

import os
import stat
import subprocess

from univention.monitoring import Alert


class NSCD(Alert):

    def write_metrics(self):
        rc, output = self.exec_command(['/usr/lib/nagios/plugins/check_procs', '-w', '1:1', '-c', '1:', '-C', 'nscd'])
        self.write_metric('univention_nscd_running', 1 if rc == 0 else 0)
        self.log.debug(output)

        message = None
        try:
            running = os.stat('/var/run/nscd/socket').st_mode & stat.S_IFSOCK == stat.S_IFSOCK
        except FileNotFoundError:
            running = False
        if not running:
            message = "no nscd socket found! nscd not running?"
        else:
            rc, output = self.exec_command(['/usr/bin/timeout', '3', 'nscd', '-g'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            if rc:
                running = False
                message = "nscd not responding!"
        self.write_metric('univention_nscd_responding', 1 if running else 0)
        self.log.debug(message)


if __name__ == '__main__':
    NSCD.main()
