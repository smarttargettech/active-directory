#!/usr/share/ucs-test/runner bash
# shellcheck shell=bash
## desc: "Check whether container can be recursively moved on ad-side in sync-mode"
## exposure: dangerous
## packages:
## - univention-s4-connector
## versions:
##  3.2-0: fixed

# shellcheck source=../../lib/base.sh
. "$TESTLIBPATH/base.sh" || exit 137
# shellcheck source=../../lib/udm.sh
. "$TESTLIBPATH/udm.sh" || exit 137
# shellcheck source=../../lib/random.sh
. "$TESTLIBPATH/random.sh" || exit 137


. "s4connector.sh" || exit 137
test -n "$connector_s4_ldap_host" || exit 137
connector_running_on_this_host || exit 137

#                 Container3
#                /
#      Container1--User
#     /
# Base
#     \
#      Container2

# shall become

# Base--Container2--Container1--User
#                             \
#                              Container3

RETRYREJECTED="$(ucr get connector/s4/retryrejected)"
ad_set_retry_rejected 2

CONTAINER1="$(random_chars)1"
AD_CONTAINER1_DN="CN=$CONTAINER1,$(ad_get_base)"
CONTAINER2="$(random_chars)2"
AD_CONTAINER2_DN="CN=$CONTAINER2,$(ad_get_base)"
CONTAINER3="$(random_chars)3"
AD_CONTAINER3_DN="CN=$CONTAINER3,CN=$CONTAINER1,$(ad_get_base)"
USER="$(random_chars)"
AD_USER_DN="CN=$USER,CN=$CONTAINER1,$(ad_get_base)"
UDM_users_user_username="$USER"

SYNCMODE="$(ad_get_sync_mode)"
ad_set_sync_mode "sync"

section "Create initial Tree structure"

ad_container_create "$CONTAINER1" || fail_test 110
ad_container_create "$CONTAINER2" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110
ad_container_create "$CONTAINER3" "" "CN=$CONTAINER1,$(ad_get_base)" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110
ad_createuser "$USER" "" "CN=$CONTAINER1,$(ad_get_base)" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110

UDM_container_cn_name="$CONTAINER1"
udm_exists "container/cn"; fail_bool 0 110
ad_exists "$AD_CONTAINER1_DN"; fail_bool 0 110
UDM_container_cn_name="$CONTAINER2"
udm_exists "container/cn"; fail_bool 0 110
ad_exists "$AD_CONTAINER2_DN"; fail_bool 0 110
UDM_container_cn_name="$CONTAINER3"
udm_exists "container/cn" "" "" "cn=$CONTAINER1,$ldap_base"; fail_bool 0 110
ad_exists "$AD_CONTAINER3_DN"; fail_bool 0 110
udm_exists "users/user" "" "" "cn=$CONTAINER1,$ldap_base"; fail_bool 0 110

section "Move $CONTAINER1 into $CONTAINER2"

ad_move "CN=$CONTAINER1,$(ad_get_base)" "CN=$CONTAINER1,CN=$CONTAINER2,$(ad_get_base)" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110

UDM_container_cn_name="$CONTAINER1"
udm_exists "container/cn"; fail_bool 1 110
ad_exists "$AD_CONTAINER1_DN"; fail_bool 1 110
UDM_container_cn_name="$CONTAINER3"
udm_exists "container/cn" "" "" "cn=$CONTAINER1,$ldap_base"; fail_bool 1 110
ad_exists "$AD_CONTAINER3_DN"; fail_bool 1 110
udm_exists "users/user" "" "" "cn=$CONTAINER1,$ldap_base"; fail_bool 1 110

UDM_container_cn_name="$CONTAINER2"
udm_exists "container/cn"; fail_bool 0 110
ad_exists "$AD_CONTAINER2_DN"; fail_bool 0 110
UDM_container_cn_name="$CONTAINER1"
AD_CONTAINER1_DN="CN=$CONTAINER1,CN=$CONTAINER2,$(ad_get_base)"
udm_exists "container/cn" "" "" "cn=$CONTAINER2,$ldap_base"; fail_bool 0 110
ad_exists "$AD_CONTAINER1_DN"; fail_bool 0 110
AD_CONTAINER3_DN="CN=$CONTAINER3,CN=$CONTAINER1,CN=$CONTAINER2,$(ad_get_base)"
UDM_container_cn_name="$CONTAINER3"
udm_exists "container/cn" "" "" "cn=$CONTAINER1,cn=$CONTAINER2,$ldap_base"; fail_bool 0 110
ad_exists "$AD_CONTAINER3_DN"; fail_bool 0 110
AD_USER_DN="CN=$USER,CN=$CONTAINER1,CN=$CONTAINER2,$(ad_get_base)"
udm_exists "users/user" "" "" "cn=$CONTAINER1,cn=$CONTAINER2,$ldap_base"; fail_bool 0 110
ad_exists "$AD_USER_DN"; fail_bool 0 110

section "Clean up"

ad_delete "CN=$USER,CN=$CONTAINER1,CN=$CONTAINER2,$(ad_get_base)" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110
ad_delete "CN=$CONTAINER3,CN=$CONTAINER1,CN=$CONTAINER2,$(ad_get_base)" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110
ad_delete "CN=$CONTAINER1,CN=$CONTAINER2,$(ad_get_base)" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110
ad_delete "CN=$CONTAINER2,$(ad_get_base)" || fail_test 110
ad_wait_for_synchronization; fail_bool 0 110

UDM_container_cn_name="$CONTAINER2"
udm_exists "container/cn"; fail_bool 1 110
ad_exists "$AD_CONTAINER2_DN"; fail_bool 1 110
UDM_container_cn_name="$CONTAINER1"
udm_exists "container/cn" "" "" "cn=$CONTAINER2,$ldap_base"; fail_bool 1 110
ad_exists "$AD_CONTAINER1_DN"; fail_bool 1 110
UDM_container_cn_name="$CONTAINER3"
udm_exists "container/cn" "" "" "cn=$CONTAINER1,cn=$CONTAINER2,$ldap_base"; fail_bool 1 110
ad_exists "$AD_CONTAINER3_DN"; fail_bool 1 110
udm_exists "users/user" "" "" "cn=$CONTAINER1,cn=$CONTAINER2,$ldap_base"; fail_bool 1 110
ad_exists "$AD_USER_DN"; fail_bool 1 110

ad_set_retry_rejected "$RETRYREJECTED"
ad_set_sync_mode "$SYNCMODE"

ad_wait_for_synchronization; fail_bool 0 110

exit "$RETVAL"
