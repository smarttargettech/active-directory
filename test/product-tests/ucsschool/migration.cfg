[EC2Tags]
usecase: dev-jenkins-ucs5.2

[Global]
logfile: pt-migration.log

build_server: EC2
ec2_region: eu-west-1
ec2_ami: [ENV:CURRENT_AMI]

# Default instance type
#	t1.micro m1.small m1.large m1.xlarge c1.medium
#	c1.xlarge 	m2.xlarge m2.2xlarge m2.4xlarge cc1.4xlarge
ec2_instance_type: m3.large

# Use the tech VPC
ec2_subnet_id: subnet-f452539c

# In VPC the security group id is required
# #ec2_security_group: UCS systems
ec2_security_group: sg-4170962e

# the ec2 ssh keypair
ec2_keypair: tech
ec2_keypair_file: ~/ec2/keys/tech.pem

# To get EC2 access you need to create a .boto file
# http://code.google.com/p/boto/wiki/BotoConfig
# [Credentials]
#  aws_access_key_id = <your access key>
#  aws_secret_access_key = <your secret key>

recover: 4

[ptmig-m]
profile:
 hostname="ptmig-m"
 domainname="ptmigration.test"
 windows/domain="PTMIGRATION"
 ldap/base="dc=ptmigration,dc=test"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 server/role="domaincontroller_master"
command1: #setup master, slave1, slave2
 # Workaround for Bug 45950
 echo 'APT::Get::AllowUnauthenticated "true";' >> /etc/apt/apt.conf.d/00jenkinsworkaround # m
 . utils.sh && basic_setup # m
 . utils.sh && rotate_logfiles # m
 ucr set ldap/database/mdb/envflags=nosync connector/debug/level=2 umc/server/debug/level=4 umc/module/debug/level=4 connector/s4/retryrejected=2 # m
 # Disable samba cron, see Bug #36728
 # ucr set samba4/backup/cron="#0 3 * * *"
 . utils.sh && jenkins_updates && touch UCS_UPDATED # m
 . utils.sh && assert_version "[ENV:TARGET_VERSION]" || shutdown 1 -P # m
 . utils.sh && run_setup_join # m
 . utils.sh && do_reboot # m
 LOCAL sleep 120 # m
 . utils.sh && wait_for_reboot # m
 . utils.sh && import_license # m
 . utils.sh && set_administrator_dn_for_ucs_test; set_administrator_password_for_ucs_test univention # m
 . utils.sh && switch_to_test_app_center # m
 . utils.sh && install_ucsschool # m
 . utils.sh && run_join_scripts # m
 univention-app info # m
 . utils.sh && prevent_ucstest_on_fail /root/schoolinstaller.py -uAdministrator -p univention -o School1 -S -s 4 # m
 . utils.sh && run_join_scripts # m
 univention-app info # m
 . utils.sh && assert_version "[ENV:TARGET_VERSION]" || shutdown 1 -P # m
 univention-app info # m
 . utils.sh && wait_for_reboot # m
 # . utils.sh && upgrade_to_latest_test_errata  # not required since jenkins_updates should update to latest test errata if enabled
 . utils.sh && run_join_scripts # m
 # install test packages
 . utils.sh && install_ucs_test # m
 . utils.sh && install_apps_test_packages ucsschool # m
 . utils.sh && monkeypatch # m
 # Migrate to multiserver env
 univention-install ucs-school-master ucs-school-singlemaster- -y # m
 ucr unset ucsschool/singlemaster # m
 # Check for correct role package
 dpkg -l ucs-school-master | egrep '^i.*ucs-school-master'
 # Create computer account for slave1
 udm computers/domaincontroller_slave create --set name='ptmig-s1' --position cn=dc,cn=server,cn=computers,ou=School1,dc=ptmigration,dc=test # m
 udm container/ou modify --dn ou=School1,dc=ptmigration,dc=test --set ucsschoolHomeShareFileServer=cn=ptmig-s1,cn=dc,cn=server,cn=computers,ou=School1,dc=ptmigration,dc=test --set ucsschoolClassShareFileServer=cn=ptmig-s1,cn=dc,cn=server,cn=computers,ou=School1,dc=ptmigration,dc=test
 # Create school2
 /usr/share/ucs-school-import/scripts/create_ou --verbose School2 ptmig-s2 # m
 product-tests/ucsschool/migration_importuser.py # m
command2:
 # Join of slave1, slave2
command3:
 ucs-test -s checks # m
command4: # Collect results
 . utils.sh && prepare_results # m
 LOCAL utils/utils-local.sh ucsschool-fetch-results [SELF_IP] [SELF] # m
 shutdown 1 -P # m
files:
 ~/ec2/license/autotest201.ldif /root/
 utils/schoolinstaller.py /root/
 utils/utils.sh /root/
 ~/ec2/license/license.secret /etc/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/

[ptmig-s1]
profile:
 hostname="ptmig-s1"
 domainname="ptmigration.test"
 windows/domain="PTMIGRATION"
 ldap/base="dc=ptmigration,dc=test"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 server/role="domaincontroller_slave"
 nameserver=[ENV:ptmig-m_IP]
command1: #setup master, slave1, slave2
 # Workaround for Bug 45950
 echo 'APT::Get::AllowUnauthenticated "true";' >> /etc/apt/apt.conf.d/00jenkinsworkaround # s1
 . utils.sh && basic_setup # s1
 . utils.sh && rotate_logfiles # s1
 . utils.sh && jenkins_updates # s1
command2: # Join of slave1, slave2
 . utils.sh && run_setup_join_on_non_master [ENV:ptmig-m_PASSWORD] # s1
 # Check for correct role package
 dpkg -l ucs-school-slave | egrep '^i.*ucs-school-slave'
command3:
 ucs-test -s checks # s1
 getent passwd teststudent
 getent passwd teststudent3
command4: # Collect results
 . utils.sh && prepare_results # s1
 LOCAL utils/utils-local.sh ucsschool-fetch-results [SELF_IP] [SELF] # s1
 shutdown 1 -P # s1
files:
 utils/utils.sh /root/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/

[ptmig-s2]
profile:
 hostname="ptmig-s2"
 domainname="ptmigration.test"
 windows/domain="PTMIGRATION"
 ldap/base="dc=ptmigration,dc=test"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 server/role="domaincontroller_slave"
 nameserver=[ENV:ptmig-m_IP]
command1: #setup master, slave1, slave2
 # Workaround for Bug 45950
 echo 'APT::Get::AllowUnauthenticated "true";' >> /etc/apt/apt.conf.d/00jenkinsworkaround # s2
 . utils.sh && basic_setup # s2
 . utils.sh && rotate_logfiles # s2
 . utils.sh && jenkins_updates # s2
command2: # Join of slave1, slave2
 . utils.sh && run_setup_join_on_non_master [ENV:ptmig-m_PASSWORD] # s2
 # Check for correct role package
 dpkg -l ucs-school-slave | egrep '^i.*ucs-school-slave'
command3:
 ucs-test -s checks # s2
 getent passwd teststudent2
 getent passwd teststudent3
command4: # Collect results
 . utils.sh && prepare_results # s2
 LOCAL utils/utils-local.sh ucsschool-fetch-results [SELF_IP] [SELF] # s2
 shutdown 1 -P # s2
files:
 utils/utils.sh /root/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/
