[Global]
docker_image: gitregistry.knut.univention.de/univention/infrastructure/vnc-automate
logfile: ucs-appliance.log

kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]

kvm_operating_system: Others
kvm_template: 50GiB
kvm_ucsversion: empty
kvm_architecture: amd64
kvm_iso: [ENV:SOURCE_ISO]

kvm_dhcp: true
kvm_connect: false
kvm_copy_files: false

recover: 2

[ucs-appliance]
command1:
 LOCAL utils/installation_test/vnc-install-ucs.py --vnc "[SELF_VNC_DISPLAY]" --language deu --role applianceLVM --fqdn app.ucs.test
 COPY_FILES
 . utils.sh && add_tech_key_authorized_keys
 ucr set repository/online=yes repository/online/server="[ENV:REPOSITORY_SERVER]"
 . utils.sh && upgrade_to_latest_patchlevel
 . utils.sh && do_reboot
 . utils.sh && wait_for_reboot
 # appliance
 . base_appliance.sh && setup_appliance
 . base_appliance.sh && appliance_cleanup
 . base_appliance.sh && appliance_reset_servers "[ENV:RESET]"
 usermod -p \* root
 . base_appliance.sh && appliance_poweroff || true
 SSH_DISCONNECT
 SERVER id=$(virsh domid "[SELF_KVM_NAME]") && [ -n "${id#-}" ] && virsh event --domain "$id" --event lifecycle --timeout 120 --timestamp || :
 SERVER disk=$(virsh dumpxml "[SELF_KVM_NAME]" | xmllint --xpath 'string(/domain/devices/disk[@device="disk"]/source/@file)' -) && sudo chgrp Tech "$disk" && qemu-img rebase -f qcow2 -b '' "$disk" && scp "$disk" "omar.knut.univention.de:/var/build/temp/[SELF_KVM_NAME].qcow2"
 LOCAL utils/base_appliance_local.sh create_ucs_images "/var/build/temp/[SELF_KVM_NAME].qcow2" "[ENV:UPDATER_ID]"
