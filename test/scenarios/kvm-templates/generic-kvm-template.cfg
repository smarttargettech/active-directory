[Global]
docker_image: gitregistry.knut.univention.de/univention/infrastructure/vnc-automate
logfile: generic-kvm-template.log

kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_extra_label: generic-kvm-template-[ENV:UCS_VERSION]

kvm_operating_system: Others
kvm_template: 50GiB
kvm_ucsversion: empty
kvm_architecture: amd64
kvm_iso: [ENV:SOURCE_ISO]
kvm_memory: 2G
kvm_vcpus: 2

kvm_dhcp: true
kvm_connect: false
kvm_copy_files: false

recover: 2

[kvm-template]
command1:
 # installation/update
 LOCAL utils/installation_test/vnc-install-ucs.py --vnc "[SELF_VNC_DISPLAY]" --language deu --role applianceLVM --fqdn base.ucs.test
 COPY_FILES
 . utils.sh && add_tech_key_authorized_keys
 ucr set repository/online=yes repository/online/server='[ENV:REPOSITORY_SERVER]'
 . utils.sh && jenkins_updates
 . utils.sh && do_reboot
 . utils.sh && wait_for_reboot
 # appliance
 . base_appliance.sh && setup_appliance
 . base_appliance.sh && appliance_cleanup
 ucr set repository/online/server='[ENV:REPOSITORY_SERVER]' nameserver1=192.168.0.124 nameserver2=192.168.0.97 timeserver='ntp.knut.univention.de burst' update/secure_apt=yes updater/identify="UCS (KVM)"
 usermod -p "$(mkpasswd -H sha-512 univention)" root
 echo "ucsver=@%@version/version@%@-@%@version/patchlevel@%@+$(if [ '[ENV:TESTING]' = true ];then date +'%Y-%m-%d';else echo e'@%@version/erratalevel@%@';fi)" | ucr filter >/tmp/ucs.ver
 GET /tmp/ucs.ver ucs_[SELF].ver
 # stop the instance
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER id=$(virsh domid "[SELF_KVM_NAME]") && [ -n "${id#-}" ] && virsh event --domain "$id" --event lifecycle --timeout 120 --timestamp || :
 # remove cdrom
 SERVER virsh detach-disk --config --domain "[SELF_KVM_NAME]" hda
 # create template
 SOURCE ucs_[SELF].ver
 SERVER ucs-kt-put -C single -O Others -c "[SELF_KVM_NAME]" "[ucsver]_generic-unsafe_amd64"
command2:
 LOCAL rm -f ucs_[SELF].ver
