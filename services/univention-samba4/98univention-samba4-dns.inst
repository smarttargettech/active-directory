#!/bin/bash
#
# Univention Samba4
#  join script
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2004-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

VERSION=2
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

. /usr/share/univention-lib/all.sh
. /usr/share/univention-samba4/lib/all.sh

eval "$(univention-config-registry shell)"

# samba4 allowed on this system?
if is_ucr_true samba4/disabled; then
	echo "WARNING: samba4 on this system is not allowed."
	echo "         The samba4 join stops here. To rerun the"
	echo "         join script, use "
	echo "         -> univention-run-join-scripts"
	exit 0
fi

## Check if Samba 4 setup is done
LDB_URI="tdb:///var/lib/samba/private/sam.ldb"
domaindn="DC=${kerberos_realm//./,DC=}"	# that's what :py:mod:`samba.provision` uses
if ! ldbsearch -H "$LDB_URI" -b $domaindn -s base dn 2>/dev/null| grep -qi ^"dn: $domaindn"; then
	echo "Samba4 backend database not available yet, exiting joinscript 98univention-samba4-dns."
	exit 1
fi

# Change the dns/backend to samba4 only whether a S4 Connector is installed in our domain
s4connectorservicedcs="$(ldapsearch -x -ZZ -LLL -D "$ldap_hostdn" -y /etc/machine.secret "(&(univentionService=S4 Connector)(objectClass=univentionDomainController))" cn | ldapsearch-wrapper | sed -n 's/^cn: \(.*\)/\1/p')"

if [ $JS_LAST_EXECUTED_VERSION = 0 ] && [ "$dns_backend" != "samba4" ] && [ -n "$s4connectorservicedcs" ]; then
	univention-config-registry set dns/backend=samba4
	if [ -x /etc/init.d/named ]; then
		/etc/init.d/named restart
	fi

	# Wait until the local S4 contains the DNS record
	echo -n "Wait for named: "
	count=0
	while [ $count -le "$join_samba_dns_replication_timeout" ]; do
		message=$(LC_ALL=C host -W 1 "$ldap_master" 2>&1| grep 'has \(IPv6 \)\?address ')
		if [ -n "$message" ]; then
			echo " done"
			break
		else
			echo -n "."
			# restart samba-ad-dc every 200 seconds
			expr $count % 200 >/dev/null || /etc/init.d/samba-ad-dc restart
			sleep 1
		fi;
		count=$((count+1))
	done

	if [ $count -gt "$join_samba_dns_replication_timeout" ]; then
		echo " failed"
		univention-config-registry set dns/backend=ldap
		if [ -x /etc/init.d/named ]; then
			/etc/init.d/named restart
		fi
		echo "**************************************************************"
		echo "* ERROR: Failed to configure Samba4 as backend for bind.     *"
		echo "*        Please check the samba and the s4-connector logfile.*"
		echo "**************************************************************"
		exit 1
	fi

fi

if [ "$samba4_role" != "RODC" ]; then
	univention_samba4_wait_for_rid_set	## Replication of local RID Pool required for SAM account creation
	iss4connectorservicedc="$(ldapsearch -x -ZZ -LLL -D "$ldap_hostdn" -y /etc/machine.secret "(&(univentionService=S4 Connector)(name=$hostname))" cn)"
	if [ -n "$iss4connectorservicedc" ]; then
		/usr/share/univention-samba4/scripts/create_spn_account.sh \
			--samaccountname "dns-$hostname" \
			--serviceprincipalname "DNS/$hostname.$domainname" \
			--privatekeytab dns.keytab "$@" \
			--resync
	else
		/usr/share/univention-samba4/scripts/create_spn_account.sh \
			--samaccountname "dns-$hostname" \
			--serviceprincipalname "DNS/$hostname.$domainname" \
			--privatekeytab dns.keytab "$@"
	fi
	if [ $? != 0 ]; then
		echo "**************************************************************"
		echo "* ERROR: Failed to create DNS spn account.                   *"
		echo "*        Please check the samba and the s4-connector logfile.*"
		echo "**************************************************************"
		exit 1
	fi
fi

update_nss_group_cache

# Reset NTACLs after the connector has synced the accounts
if [ $JS_LAST_EXECUTED_VERSION -lt 1 ]; then
	## set the default sysvol and GPO NTACLs
	net cache flush
	samba-tool ntacl sysvolreset
fi



#Activate sysvol sync
univention-config-registry set samba4/sysvol/sync/cron?"*/5 * * * *"

if [ -n "$samba4_join_site" ]; then
	site="--site=$samba4_join_site"
fi

if [ $JS_LAST_EXECUTED_VERSION -le 1 ]; then
## Set DNS records again in case Bug #26285 occurred in UCS 3.0-0.
## Flow control copied from 96univention-samba4.inst

	if [ "$samba4_role" = 'DC' ]; then

		if [ "$s4connectorservicedcs" = "$hostname" ]; then

			/usr/share/univention-samba4/scripts/setup-dns-in-ucsldap.sh "$@" --dc --gc --pdc "$site"

		else

			/usr/share/univention-samba4/scripts/setup-dns-in-ucsldap.sh "$@" --dc "$site"

		fi

	elif [ "$samba4_role" = "RODC" ]; then

		/usr/share/univention-samba4/scripts/setup-dns-in-ucsldap.sh "$@" --rodc "$site"

	fi

fi

# On a selective replicated DC the local system is not registered in global
# SRV records. But the local settings are required, so execute samba_dnsupdate
if is_ucr_true samba4/join/dnsupdate; then
	samba_dnsupdate --use-samba-tool
fi

joinscript_save_current_version

exit 0
