@%@UCRWARNING=# @%@

@!@
# flake8: noqa
ucr_template = """
ruleset(name="admin-diary-forwardtls-%(admin/diary/server)s"
	# See
	# * https://www.rsyslog.com/doc/v8-stable/configuration/basic_structure.html
	# * https://www.rsyslog.com/doc/v8-stable/rainerscript/index.html
	# * https://www.rsyslog.com/doc/master/concepts/queues.html
	# * https://www.rsyslog.com/doc/v8-stable/faq/difference_queues.html
	# * https://www.rsyslog.com/doc/master/whitepapers/queues_analogy.html
	# * https://www.rsyslog.com/doc/node28.html
	# * https://www.rsyslog.com/doc/v8-stable/rainerscript/queue_parameters.html
	# * https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/s1-working_with_queues_in_rsyslog
	queue.type="FixedArray"
	queue.size="50000" # Default for ruleset queues
	queue.filename="admin-diary-forwardtls-%(admin/diary/server)s"
	queue.maxDiskSpace="512M"
	queue.maxfilesize="10M" # Size for each queue.filenameXXXXXXX file
	queue.saveOnShutdown="on"
	queue.discardSeverity="5" # discard messages less than "notice" (TODO: or less than warning?) if queue.discardMark has been reached
	queue.timeoutEnqueue="1" # If everything is full, timeout after 0.001 seconds before dropping message
	) {
	action(
		name="admin-diary-forwardtls" # shown in ps -T
		type="omrelp"
		target="%(admin/diary/server)s" port="%(admin/diary/backend/port)s"
		tls="on"
		tls.caCert="/etc/univention/ssl/ucsCA/CAcert.pem"
		tls.myCert="/etc/univention/ssl/%(hostname)s.%(domainname)s/cert.pem"
		tls.myPrivKey="/etc/univention/ssl/%(hostname)s.%(domainname)s/private.key"
		tls.authMode="name"
		tls.permittedPeer=["*.%(domainname)s"]
		# See https://www.rsyslog.com/doc/v8-stable/configuration/modules/omrelp.html
		action.ResumeRetryCount="-1"
		# See https://www.rsyslog.com/doc/v8-stable/configuration/actions.html
		# And for debugging:
		# action.reportSuspension="on"
		# action.reportSuspensionContinuation="on"
	)
}

"""  # noqa: E101

admin_diary_backend = configRegistry.get("admin/diary/backend")
if admin_diary_backend:
    admin_diary_backend_port = configRegistry.get("admin/diary/backend/port")
    if not admin_diary_backend_port:
        # set local non-persistent key:
        configRegistry["admin/diary/backend/port"] = "10514"
    print('module(load="omrelp")')  # Also happens above in main rsyslog.conf in case UCR syslog/remote has a :relp: entry
    for server in admin_diary_backend.split():
        # set local non-persistent key:
        configRegistry["admin/diary/server"] = server
        print(ucr_template % configRegistry)
    print('if $syslogtag == "ADMINDIARY:" then {')
    print('\tif $syslogseverity <= 6 then {')
    for server in admin_diary_backend.split():
        print("\t\tcall admin-diary-forwardtls-%s" % (server,))
    print('\t}')
    print('stop')  # Don't log ADMINDIARY lines locally.
    print('}')
@!@
