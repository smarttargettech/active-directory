#! /bin/bash
#
# Univention Samba
#  join script
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2001-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

# shellcheck disable=SC2034
VERSION=8

# shellcheck source=/dev/null
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

# shellcheck source=/dev/null
. /usr/share/univention-lib/all.sh

eval "$(univention-config-registry shell)"

s4setup="$(ldapsearch -x -ZZ -D "${ldap_hostdn:?}" -y /etc/machine.secret '(&(univentionService=Samba 4)(objectClass=univentionDomainController))' -LLL dn | sed -ne 's|dn: ||p')"
if [ -n "$s4setup" ] && is_domain_controller; then
	# Try to install a S3 DC in a S4 environment ...
	echo "ERROR: It is not possible to install a samba 3 domaincontroller "
	echo "       into a samba 4 environment."

	if is_ucr_true samba3/ignore/mixsetup; then
		echo "WARNING: samba3/ignore/mixsetup is true. Continue as "
		echo "         requested"
	else
		exit 1
	fi
fi

### --- BEGIN helper functions ---

extract_bind_credentials() {
	## parse bind credentials from command line arguments into shell variables
	while [ $# -gt 0 ]; do
		case "$1" in
			"--binddn")
				binddn="${2:?missing binddn}"
				shift 2 || exit 2
				;;
			"--bindpwdfile")
				bindpwdfile="${2:?missing bindpwdfile}"
				shift 2 || exit 2
				;;
			*)
				shift
				;;
		esac
	done
	if [ -n "$binddn" ]; then
		dcaccount="$(univention-ldapsearch -s base -b "$binddn" uid | ldapsearch-wrapper | sed -n 's/^uid: //p')"
	fi
}

configure_localhost_as_winsserver ()
{
	univention-config-registry set windows/wins-support=yes windows/wins-server="localhost"
}

disable_local_winsserver ()
{
	univention-config-registry set windows/wins-support=no
}

configure_ldapmaster_as_winsserver ()
{
	univention-config-registry set windows/wins-support=no windows/wins-server="${ldap_master:?}"
}

ruler () {
	printf '%*s\n' "${COLUMNS:-$(tput cols || echo 78)}" '' | tr ' ' '#'
}

configure_samba_role() {
	if is_ucr_true ad/member; then
		univention-config-registry set samba/role="memberserver"
		echo "INFO: ad/member is true, will join as memberserver into an AD domain"
	else
		case "${server_role:-}" in
			domaincontroller_*)
				ruler
				echo "ERROR: Samba/NT (samba3) Domain Controller is not supported any more."
				echo "       Please also note that the migration to Samba/AD is not supported any more after updating to UCS 4.3."
				ruler
				exit 1
				;;
			*)
				univention-config-registry set samba/role?"memberserver"
				;;
		esac
	fi
	samba_role=$(univention-config-registry get samba/role)

	if [ "${samba_role}" != "memberserver" ]; then
		## check again if we can join as DC
		case "${server_role}" in
			domaincontroller_*)
				if is_domain_in_admember_mode; then
					echo "ERROR: The domain is in AD Member Mode, cannot join as DC."
					echo "       Please run univention-join again to configure this system as AD Member."
					exit 1
				fi
		esac
	fi
}

configure_s4_dc_as_kdc() {
	local kdc
	if [ -n "$1" ]; then
		kdc="$1"
	else
		kdc="$(LC_ALL=C net ads lookup | sed -ne 's|^Domain Controller:[\t]*||p' | head -n 1)"
	fi

	if [ -n "$kdc" ]; then
		univention-config-registry set \
			kerberos/defaults/dns_lookup_kdc=false \
			kerberos/kdc="$kdc"
	fi
}

### --- END helper functions ---

### Determine Samba join credentials
extract_bind_credentials "$@"

if [ -n "$dcaccount" ] && [ -n "$bindpwdfile" ]; then
	samba_account="$dcaccount"
	samba_pwd="$(<"$bindpwdfile")"
else
	if is_ucr_true ad/member; then
		echo "INFO: Cannot run joinscript in memberserver mode without join credentials. Please run:"
		printf "\tunivention-run-join-scripts --ask-pass\n"
		echo "to complete the domain join."
		exit 2
	fi
	if [ -e /etc/backup-join.secret ]; then
		samba_account="join-backup"
		samba_pwd="$(< /etc/backup-join.secret)"
	fi
fi

configure_samba_role

# configure profile/home settings
if [ "$samba_role" = "domaincontroller" ]; then
	if [ -n "${samba_netbios_name:-}" ]; then
		tmphostname=$samba_netbios_name
	elif [ -n "${samba_ha_master:-}" ]; then
		tmphostname="$samba_ha_master"
	else
		tmphostname="$${hostname:?}"
	fi
	univention-config-registry set \
		samba/profileserver?"$tmphostname" \
		samba/profilepath?'%U\windows-profiles\%a' \
		samba/homedirserver?"$tmphostname" \
		samba/homedirpath?%U \
		samba/homedirletter?I
fi

# Join as ADS member if the S4 connector is installed
#                    or if the UCS Primary claims to be a AD Memberserver
# To overwrite this setting:
#  ucr set --force samba/domain/security=ads
#  ucr set --force samba/domain/security=domain
if [ -n "$s4setup" ] || is_ucr_true ad/member; then
	univention-config-registry set samba/domain/security=ads

	/usr/share/univention-samba/mount_extfs_with_user_xattr.py
	if [ -z "${samba4_ntacl_backend:-}" ]; then
		univention-config-registry set samba4/ntacl/backend='native'
		systemctl restart univention-directory-listener
	fi

	## set samba/share/home=yes on a managed node, if it is a join into a samba4 domain and if it is the first join
	if [ "$JS_LAST_EXECUTED_VERSION" = 0 ] && [ "$samba_role" = "memberserver" ]; then
		univention-config-registry set samba/share/home=yes
	fi
else
	univention-config-registry set samba/domain/security=domain
fi

rm -f /var/cache/samba/dont_start >/dev/null 2>&1

# during installation samba/autostart was set to no to prevent
# a half configured samba server. Set autostart to yes during first join
if [ "$JS_LAST_EXECUTED_VERSION" = 0 ]; then
	univention-config-registry set samba/autostart=yes
fi
univention-config-registry set samba/autostart?yes

# Stop the NFS Kernel Server
nfsd_pid=$(pidof nfsd)
if [ -n "$nfsd_pid" ]; then
	test -x /etc/init.d/nfs-kernel-server && /etc/init.d/nfs-kernel-server stop
fi

winbind_was_running=0
if [ -x /etc/init.d/winbind ]; then
	if /etc/init.d/winbind status >/dev/null 2>&1; then
		winbind_was_running=1
	fi

	/etc/init.d/winbind stop
fi

case "${server_role}" in
domaincontroller_slave|memberserver)
	univention-config-registry set	samba/user="$ldap_hostdn" \
									samba/user/pwdfile?"/etc/machine.secret"
	smbpasswd -W < /etc/machine.secret

	echo "setting idmap secret for '*' from /etc/machine.secret"
	net idmap set secret '*' "$(< /etc/machine.secret)" 2>/dev/null
	;;
*)
	univention-config-registry set	samba/user?"cn=admin,${ldap_base:?}" \
									samba/user/pwdfile?"/etc/ldap.secret"
	/etc/init.d/samba restart >/dev/null 2>&1

	smbpasswd -W < /etc/ldap.secret

	echo "setting idmap secret for '*' from /etc/ldap.secret"
	net idmap set secret '*' "$(< /etc/ldap.secret)" 2>/dev/null
	;;
esac

eval "$(univention-config-registry shell samba/user/pwdfile samba/user)"

# The samba server should be up and running for local join
/etc/init.d/samba restart
sleep 3

security="$(univention-config-registry get samba/domain/security)"
if [ "$security" = "ads" ]; then
	# Use the correct kerberos KDC
	if is_ucr_true ad/member && [ -n "${samba_dc:-}" ]; then
		univention-config-registry set \
			kerberos/defaults/dns_lookup_kdc=false \
			kerberos/kdc="$samba_dc" \
			kerberos/kpasswdserver="$samba_dc"
	else
		# use dns for kerberos in member mode
		if [ -z "${kerberos_kdc:-}" ] && ! is_ucr_true ad/member; then
			configure_s4_dc_as_kdc "$samba_dc"
		fi
	fi
	JOIN_CMD="net ads join"
else
	JOIN_CMD="net rpc join"
fi

# net ads join doesn't use the default smb.conf. Make it explicit.
export SMB_CONF_PATH=/etc/samba/smb.conf

if [ -n "$samba_account" ] && [ -n "$samba_pwd" ]; then
	if [ "${JS_LAST_EXECUTED_VERSION:-0}" -le 5 ]; then
		# set the samba option
		univention-directory-manager "computers/$server_role" modify "$@" --dn "$ldap_hostdn" --append-option samba --set password="$(< /etc/machine.secret)" || die
	fi

	machine_secret="$(< /etc/machine.secret)"
	if [ -n "$samba_dc" ]; then
		if $JOIN_CMD -U"$samba_account"%"$samba_pwd" -S"$samba_dc" machinepass="$machine_secret"; then
			univention-config-registry set windows/wins-support=no windows/wins-server?"$samba_dc"
		else
			echo "ERROR: Failed to join to $samba_dc via $JOIN_CMD. Please check your Samba DCs and your DNS and WINS configuration."
			exit 1
		fi
	else
		# Join against the global workgroup
		if $JOIN_CMD -U"$samba_account"%"$samba_pwd" machinepass="$machine_secret"; then
			## Fine, the automatic directory node locator succeeded and we are joined
			if [ "${server_role}" = "domaincontroller_master" ]; then
				if [ "${samba_role}" = "domaincontroller" ]; then
					configure_localhost_as_winsserver
				else
					disable_local_winsserver
				fi
			else
				disable_local_winsserver
			fi

		elif is_ucr_true ad/member; then
			echo "ERROR: Failed to join to AD DC via $JOIN_CMD. Please check your Samba DCs and your DNS and WINS configuration."
			exit 1
		# try to join directly against the Primary
		elif $JOIN_CMD -U"$samba_account"%"$samba_pwd" -S"$ldap_master" machinepass="$machine_secret"; then
			if [ "${ldap_master}" = "${hostname:-}.${domainname:-}" ]; then
				configure_localhost_as_winsserver
			else
				configure_ldapmaster_as_winsserver
			fi
		# try to join against localhost
		elif $JOIN_CMD -U"$samba_account"%"$samba_pwd" -Slocalhost machinepass="$machine_secret"; then
			configure_localhost_as_winsserver
		else
			echo "ERROR: Failed to join via $JOIN_CMD. Please check your Samba DCs and your DNS and WINS configuration."
			exit 1
		fi
	fi

	# restart samba
	/etc/init.d/samba stop
	test -x /etc/init.d/winbind && /etc/init.d/winbind stop
	sleep 1
	/etc/init.d/samba start
	sleep 1
	test -x /etc/init.d/winbind && { /etc/init.d/winbind start; sleep 3; }

	# set default printer permissions
	net rpc rights -U"$samba_account"%"$samba_pwd" grant Printer-Admins SePrintOperatorPrivilege
	net rpc rights -U"$samba_account"%"$samba_pwd" grant Administrator SePrintOperatorPrivilege

else
	# stop samba
	restart=0
	samba_pid=$(pidof smbd)
	if [ -n "$samba_pid" ]; then
		/etc/init.d/samba stop >/dev/null 2>&1
		killall smbd nmbd >/dev/null 2>&1
	fi
fi


SAMBA_DRIVERS="/var/lib/samba/drivers"
mkdir -p $SAMBA_DRIVERS
chgrp -R "Printer-Admins" $SAMBA_DRIVERS
chmod g+w $SAMBA_DRIVERS
chmod +s $SAMBA_DRIVERS

for X in COLOR IA64 W32ALPHA W32MIPS W32PPC W32X86 WIN40 x64; do
	mkdir -p $SAMBA_DRIVERS/$X;
	chgrp -R "Printer-Admins" $SAMBA_DRIVERS/$X
	chmod g+w $SAMBA_DRIVERS/$X
	chmod +s $SAMBA_DRIVERS/$X
done

# do create and modify in two steps, maybe the share already exists
univention-directory-manager container/cn create "$@" --position "cn=shares,$ldap_base" --ignore_exists --set name="$hostname.$domainname" || die
univention-directory-manager container/cn modify "$@" --dn "cn=$hostname.$domainname,cn=shares,$ldap_base" --set sharePath=1 || die


if [ "${create_home_share:-}" = "true" ]; then
	univention-directory-manager shares/share create "$@" --position "cn=$hostname.$domainname,cn=shares,$ldap_base" --ignore_exists --set name=homes --set path=/home --set sambaName=homes --set host="$hostname.$domainname" --set writeable=1 --set sambaWriteable=1 || die
	univention-config-registry unset create/home/share
fi


/etc/init.d/samba restart >/dev/null 2>&1

if [ -n "$nfsd_pid" ]; then
	test -x /etc/init.d/nfs-kernel-server && /etc/init.d/nfs-kernel-server start
fi

if [ $winbind_was_running -eq 1 ]; then
	/etc/init.d/winbind restart >/dev/null 2>&1
fi

ucs_addServiceToLocalhost 'Samba 3' "$@" || die

joinscript_save_current_version

exit 0
