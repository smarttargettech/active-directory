#!/bin/bash
#
# UCS - univention-keycloak integration - domain integration
#  join script
#
# Like what you see? Join us!
# https://www.univention.com/about-us/careers/vacancies/
#
# Copyright 2023-2025 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

VERSION="1"
. /usr/share/univention-lib/all.sh
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

domainname="$(ucr get domainname)"
ucr set ucs/server/sso/uri?"https://ucs-sso-ng.${domainname,,}"

eval "$(ucr shell)"

SECRETFILE="/etc/idp-ldap-user.secret"
HOSTPWD="/etc/machine.secret"
HOSTACCOUNT="$hostname\$"
if [ "$server_role" = "domaincontroller_master" ]; then
	# Only set password if sys-idp-user does not exist
	username=$(ucs_getAttrOfDN uid uid=sys-idp-user,cn=users,"$ldap_base" "$@" 2>/dev/null)
	if [ ! "$username" = "sys-idp-user" ]; then
		PASSWORD=$(makepasswd --chars=20)
		touch "$SECRETFILE"
		chown root:"DC Backup Hosts" "$SECRETFILE"
		chmod 640 "$SECRETFILE"
		printf '%s' "$PASSWORD" > "$SECRETFILE"
		# written in Python to ignore extended attributes with required fields
		(python3 - "$PASSWORD" "$ldap_base" || die) <<- EOF
# -*- coding: utf-8 -*-
import sys
import univention.admin.uldap
import univention.admin.uexceptions
import univention.admin.modules  # must be imported :(
import univention.admin.objects  # must be imported :(
import univention.admin.handlers.users.user
univention.admin.modules.update()
lo, po = univention.admin.uldap.getAdminConnection()
po.setDn('cn=users,%s' % (sys.argv[2]))
user = univention.admin.modules.get('users/ldap').object(None, lo, po)
user.open()
user['overridePWHistory'] = '1'
user['overridePWLength'] = '1'
user['username'] = 'sys-idp-user'
user['password'] = sys.argv[1]
user['lastname'] = 'idp-user'
user['name'] = 'idp-user'
try:
  print('Creating SAML user')
  dn = user.create()
except (univention.admin.uexceptions.objectExists, univention.admin.uexceptions.uidAlreadyUsed):
  print('SAML user already exists')
  sys.exit(0)
print('Make SAML user a system user')
lo.modify(dn, [('univentionObjectFlag', None, [b'functional', b'hidden'])])
EOF
    fi
elif [ "$server_role" = "domaincontroller_backup" ]; then
	touch "$SECRETFILE"
	chown root:"DC Backup Hosts" "$SECRETFILE" || die
	chmod 640 "$SECRETFILE" || die
	univention-scp $HOSTPWD "$HOSTACCOUNT@$ldap_master:$SECRETFILE $SECRETFILE" || die
	echo "Successfully downloaded the sys-idp-user credential file"
fi

if [ "$server_role" = "domaincontroller_master" ]; then
	if [ -z "${keycloak_server_sso_certificate_generation}" ] || is_ucr_true keycloak/server/sso/certificate/generation; then
		fqdn="$(echo "$ucs_server_sso_uri" | sed -E 's|^[a-zA-Z]+://([^/]+).*|\1|')"
		univention-certificate new -name "$fqdn" -days "${ssl_default_days:-1825}" || die
		ucr set keycloak/server/sso/certificate/generation='false'
	fi
fi

joinscript_save_current_version
